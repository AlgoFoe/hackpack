import { execa } from 'execa';
import chalk from 'chalk';
import fs from 'fs/promises';

export async function setupShadcnUI(projectName, languageChoice) {
  console.log(chalk.blue('Setting up shadcn/ui...'));
  
  // Change to project directory
  process.chdir(projectName);
  
  try {
    // Initialize shadcn/ui
    console.log(chalk.blue('Initializing shadcn/ui...'));
    await execa('npx', ['shadcn@latest', 'init'], { 
      stdio: 'inherit',
      env: { ...process.env, CI: 'true' }
    });
    
    // Add button component
    console.log(chalk.blue('Adding Button component...'));
    await execa('npx', ['shadcn@latest', 'add', 'button'], { 
      stdio: 'inherit' 
    });
    
    // Add toast component
    console.log(chalk.blue('Adding Toast component...'));
    await execa('npx', ['shadcn@latest', 'add', 'sonner'], { 
      stdio: 'inherit' 
    });
    
    // Create a welcome page
    console.log(chalk.blue('Creating a welcome page...'));
    
    const fileExt = languageChoice === 'ts' ? 'tsx' : 'js';
    const layoutPath = `src/app/layout.${fileExt}`;
    const pagePath = `src/app/page.${fileExt}`;
    
    const layoutContent = await fs.readFile(layoutPath, 'utf8');
    if (layoutContent) {
      let updatedLayoutContent = addToasterToLayout(layoutContent, fileExt);
      
      // Then update the page title
      updatedLayoutContent = updatePageTitle(updatedLayoutContent);
      
      await fs.writeFile(layoutPath, updatedLayoutContent);
    }
    
    const pageContent = createWelcomePage(fileExt);
    await fs.writeFile(pagePath, pageContent);
    
    console.log(chalk.green('shadcn/ui setup completed successfully!'));
  } catch (error) {
    console.error(chalk.red('Error setting up shadcn/ui:'), error.message);
    console.log(chalk.yellow('You may need to set up shadcn/ui manually after project creation.'));
  }
  
  process.chdir('..');
}

function addToasterToLayout(layoutContent, fileExt) {
  if (!layoutContent.includes("import { Toaster }")) {
    const importRegex = /^import .+?;/gm;
    let match;
    let lastImportIndex = 0;
    
    // Find the position of the last import
    while ((match = importRegex.exec(layoutContent)) !== null) {
      lastImportIndex = match.index + match[0].length;
    }
    
    const toasterComponent = 'import { Toaster } from "@/components/ui/sonner";';
    
    if (lastImportIndex > 0) {
      layoutContent = 
        layoutContent.substring(0, lastImportIndex) + 
        '\n' + toasterComponent + 
        layoutContent.substring(lastImportIndex);
    } else {
      layoutContent = toasterComponent + '\n' + layoutContent;
    }
  }
  
  if (!layoutContent.includes("<Toaster />")) {
    if (layoutContent.includes("{children}")) {
      layoutContent = layoutContent.replace(
        "{children}",
        "{children}\n        <Toaster />"
      );
    } else {
      layoutContent = layoutContent.replace(
        "</body>",
        "        <Toaster />\n      </body>"
      );
    }
  }
  
  return layoutContent;
}


function updatePageTitle(layoutContent) {
  if (layoutContent.includes('title:') && layoutContent.includes('metadata')) {
    layoutContent = layoutContent.replace(
      /title: ["']Create Next App["']/,
      'title: "HackPack Turbo â€” Build Fast, Ship Faster"'
    );
    
    if (layoutContent.includes('description:')) {
      layoutContent = layoutContent.replace(
        /description: ["']Generated by create next app["']/,
        'description: "Web application created with HackPack"'
      );
    }
  }
  
  return layoutContent;
}

function createWelcomePage(fileExt) {
  // For JavaScript
  if (fileExt === 'js') {
    return `"use client"

import { Button } from "@/components/ui/button"
import { toast } from "sonner"

export default function Home() {
  
  const handleClick = () => {
    toast("Success!", {
      description: (
        <span style={{ color: "black" }}>
          You&apos;ve installed shadcn/ui with HackPack ðŸš€
        </span>
      ),
    })
  }
  
  return (
    <main className="flex min-h-screen flex-col items-center justify-center p-24 bg-gradient-to-b from-slate-900 to-slate-800">
      <div className="z-10 max-w-5xl w-full items-center justify-center text-center">
        <h1 className="text-5xl font-bold mb-6 text-white">
          Welcome to <span className="text-blue-400">HackPack</span>
        </h1>
        
        <p className="text-lg mb-8 text-slate-300">
          Build Fast, Ship Faster!ðŸš€
          <br />
          This project is set up with Next.js and shadcn/ui.
        </p>
        
        <Button 
          onClick={handleClick}
          className="bg-blue-500 hover:bg-blue-600"
        >
          Click me for a toast notification
        </Button>
        
        <p className="mt-12 text-sm text-slate-400">
          Edit <code className="font-mono bg-slate-700 p-1 rounded">src/app/page.js</code> to get started
        </p>
      </div>
    </main>
  )
}`
  } 
  // For TypeScript
  else {
    return `"use client"

import { Button } from "@/components/ui/button"
import { toast } from "sonner"

export default function Home() {
  
  const handleClick = () => {
    toast("Success!", {
      description: (
        <span style={{ color: "black" }}>
          You&apos;ve installed shadcn/ui with HackPack ðŸš€
        </span>
      ),
    })
  }
  
  return (
    <main className="flex min-h-screen flex-col items-center justify-center p-24 bg-gradient-to-b from-slate-900 to-slate-800">
      <div className="z-10 max-w-5xl w-full items-center justify-center text-center">
        <h1 className="text-5xl font-bold mb-6 text-white">
          Welcome to <span className="text-blue-400">HackPack</span>
        </h1>
        
        <p className="text-lg mb-8 text-slate-300">
          Build Fast, Ship Faster!ðŸš€
          <br />
          This project is set up with Next.js and shadcn/ui.
        </p>
        
        <Button 
          onClick={handleClick}
          className="bg-blue-500 hover:bg-blue-600"
        >
          Click me for a toast notification
        </Button>
        
        <p className="mt-12 text-sm text-slate-400">
          Edit <code className="font-mono bg-slate-700 p-1 rounded">src/app/page.tsx</code> to get started
        </p>
      </div>
    </main>
  )
}`
  }
}
